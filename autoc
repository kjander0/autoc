#!/bin/python3

import sys

# <statement> = <assignment> |
#               <expression>

def parse_statement(state):
    while state.src[offset].iswhitespace():
        offset += 1

    # if we find an identifier then it must be an assignment
    identifier = peek_identifier(state)
    if identifier is not None:
        ass = parse_assignment(state)
    else:
        expr = parse_expression(state)
    checkError(state)

def peek_identifier(state):
    start_offset = state.offset 
    ident = parse_identifier()
    state.offset = start_offset

def parse_identifier(state):
    end_offset = state.offset
    while state.src[offset].isalnum():
        end_offset += 1
    state.offset = end_offset
    return state.src[offset:end_offset]

def check_error(state):
    if state.error is None:
        return
    print(state.error)
    sys.exit()

class State:
    pass

state = State()
state.offset = 0
state.src = \
'''

a = 2

'''
parse_statement(state)
